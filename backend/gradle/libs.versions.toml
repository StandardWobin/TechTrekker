[versions]
exposedVersion = "0.41.1"
hikariVersion = "5.0.1"
kotlinVersion = "1.8.21"
ktlintVersion = "11.3.2"
ktorVersion = "2.3.0"
logbackVersion = "1.4.7"
mysqlConnectorVersion = "8.0.33"
sshVersion = "0.1.55"
swaggerCodegenVersion = "1.0.39"
versionCatalogUpdateVersion = "0.8.0"
versionUpdateVersion = "0.46.0"

[libraries]
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion" }
exposedJDBC = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion" }
exposedKotlinDateTime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposedVersion" }
hikariCP = { module = "com.zaxxer:HikariCP", version.ref = "hikariVersion" }
kotlinTestJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
ktorClientCioJVM = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktorVersion" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktorSerializationJacksonJVM = { module = "io.ktor:ktor-serialization-jackson-jvm", version.ref = "ktorVersion" }
ktorSerializationKotlinxJsonJVM = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktorVersion" }
ktorServerAuth = { module = "io.ktor:ktor-server-auth", version.ref = "ktorVersion" }
ktorServerAuthJVM = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktorVersion" }
ktorServerCallLoggingJVM = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktorVersion" }
ktorServerCioJVM = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktorVersion" }
ktorServerContentNegotiationJVM = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktorVersion" }
ktorServerCoreJVM = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktorVersion" }
ktorServerCorsJVM = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktorVersion" }
ktorServerDefaultHeadersJVM = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktorVersion" }
ktorServerForwardedHeaderJVM = { module = "io.ktor:ktor-server-forwarded-header-jvm", version.ref = "ktorVersion" }
ktorServerHostCommonJVM = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktorVersion" }
ktorServerOpenAPI = { module = "io.ktor:ktor-server-openapi", version.ref = "ktorVersion" }
ktorServerSessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktorVersion" }
ktorServerStatusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktorVersion" }
ktorServerStatusPagesJVM = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktorVersion" }
ktorServerSwagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktorVersion" }
ktorServerTestsJVM = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktorVersion" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackVersion" }
mysqlConnector = { module = "mysql:mysql-connector-java", version.ref = "mysqlConnectorVersion" }
sshConnector = { module = "com.jcraft:jsch", version.ref = "sshVersion" }
swaggerCodegenGenerators = { module = "io.swagger.codegen.v3:swagger-codegen-generators", version.ref = "swaggerCodegenVersion" }

[bundles]
cookies = [
    "ktorServerSessions",
]
dbConnector = [
    "hikariCP",
    "mysqlConnector",
    "sshConnector"
]
exposed = [
    "exposedCore",
    "exposedJDBC",
    "exposedKotlinDateTime",
]
ktorClient = [
    "ktorClientCioJVM",
    "ktorClientContentNegotiation",
]
ktorSerialization = [
    "ktorSerializationJacksonJVM",
    "ktorSerializationKotlinxJsonJVM",
]
ktorServer = [
    "ktorServerAuthJVM",
    "ktorServerCallLoggingJVM",
    "ktorServerCioJVM",
    "ktorServerContentNegotiationJVM",
    "ktorServerCoreJVM",
    "ktorServerCorsJVM",
    "ktorServerDefaultHeadersJVM",
    "ktorServerForwardedHeaderJVM",
    "ktorServerHostCommonJVM",
    "ktorServerStatusPages",
    "ktorServerStatusPagesJVM",
]
logging = [
    "logbackClassic",
]
security = [
    "ktorServerAuth",
]
swaggerAndOpenAPI = [
    "ktorServerOpenAPI",
    "ktorServerSwagger",
    "swaggerCodegenGenerators",
]
testing = [
    "kotlinTestJunit",
    "ktorServerTestsJVM",
]

[plugins]
catalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdateVersion" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinVersion" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinVersion" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintVersion" }
ktorPlugin = "io.ktor.plugin:2.3.0"
versionUpdate = { id = "com.github.ben-manes.versions", version.ref = "versionUpdateVersion" }
